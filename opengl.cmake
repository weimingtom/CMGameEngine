SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS TRUE)

OPTION(BUILD_OPENGL_LIB			"Build OpenGL Library"						FALSE	)

IF(BUILD_OPENGL_LIB)

	add_definitions("-DGLEW_STATIC")

	IF(WIN32)
		INCLUDE_DIRECTORIES(${CMGDK_PATH}/3rdpty/opengl)
		#包含GLCoreARB.h wglext.h等文件
	ENDIF()

    OPTION(USE_GLFW "Use GLFW" TRUE)

	IF(UNIX)
		OPTION(OPENGL_USE_EGL		"Use EGL"				FALSE)
		OPTION(OPENGL_USE_WAYLAND	"Use Wayland-EGL"		FALSE)
	ENDIF()

    SET(USE_OPENGL_PROFILE CORE CACHE STRING "OpenGL Profile select")

    SET_PROPERTY(CACHE USE_OPENGL_PROFILE PROPERTY STRINGS CORE ES1 ES2 ES3 ES31 ES32)

	IF(USE_OPENGL_PROFILE STREQUAL CORE)
# 		ADD_DEFINITIONS("-DGLFW_INCLUDE_GLCOREARB")
		ADD_DEFINITIONS("-D_GLFW_USE_OPENGL")

		message("Use OpenGL Core")

		find_package(OpenGL REQUIRED)

		IF(UNIX)
			SET(HGL_OpenGL_LIB GL)
		ELSE()
			SET(HGL_OpenGL_LIB OpenGL32)
		ENDIF()
	ELSEIF(USE_OPENGL_PROFILE STREQUAL ES1)
# 		ADD_DEFINITIONS("-DGLFW_INCLUDE_ES1")
        ADD_DEFINITIONS("-D_GLFW_USE_GLESV1")
        message("Use OpenGL ES1")
        SET(HGL_OpenGL_LIB GLESv1_CM)
        find_package(GLESv1 REQUIRED)
    ELSEIF(USE_OPENGL_PROFILE STREQUAL ES2)
# 		ADD_DEFINITIONS("-DGLFW_INCLUDE_ES2")
        ADD_DEFINITIONS("-D_GLFW_USE_GLESV2")
        message("Use OpenGL ES2")
        SET(HGL_OpenGL_LIB GLESv2)
        find_package(GLESv2 REQUIRED)
    ELSEIF(USE_OPENGL_PROFILE STREQUAL ES3)
# 		ADD_DEFINITIONS("-DGLFW_INCLUDE_ES3")
        ADD_DEFINITIONS("-D_GLFW_USE_GLESV3")
        message("Use OpenGL ES3")
        find_package(GLESv3 REQUIRED)
    ENDIF()

	IF(OPENGL_USE_EGL)
		IF(OPENGL_USE_WAYLAND)
			SET(HGL_OpenGL_LIB ${HGL_OpenGL_LIB} wayland-egl)
		ELSE()
			SET(HGL_OpenGL_LIB ${HGL_OpenGL_LIB} egl)
		ENDIF()
	ENDIF(OPENGL_USE_EGL)
ENDIF(BUILD_OPENGL_LIB)
